
// seccion codigo
package JFLEX_Y_CUP;

import java_cup.runtime.*;
import AnalizadorLexico;

parser code {:
        
  /*  public SumasParser(SumasLexer lexer) {
        super(lexer);
    }

    private int count = 0;

    private void increaseCount() {
        count++;
    }
    
    public int getCount() {
        return count;
    }


    public void report_error(String message, Object info) {
        System.out.println("public void report_error");
    }
    
    public void report_fatal_error(String message, Object info) {
        System.out.println("public void report_fatal_error");
    }

    public void syntax_error(Symbol cur_token) {
        System.out.println("El error es el simbolo: " + sym.terminalNames[cur_token.sym]);
        System.out.println(String.format("En la posicion: %d, %d", cur_token.left, cur_token.right));
    }

    public void unrecovered_syntax_error(Symbol cur_token) {
        if (cur_token.sym == sym.EOF) {
            System.out.println("public void unrecoveredsyntax_error");
        }
    }*/
:}




// seccion de terminales

/**
 * IMPORTANTE: FALLABA POR LO SIGUIENTE:
 * CADA VEZ QUE SE TRADUCE EL ARCHIVO CUP, TAMBIEN HAY QUE ACTUALIZAR EL ARCHIVO sym.java
 * Y A MI SE ME OLVIDÃ“ ESE PASO.
 * F por el inge XD
 */


terminal DEF, BARRAS, PIE, TITULO, EJEX, EJEY, ETIQUETAS, VALORES, UNIR, TIPO, CANTIDAD, PORCENTAJE, TOTAL, EXTRA;
terminal PUNTO, COMA, PUNTOYCOMA, MAS, MENOS, POR, DIVIDIDO, PABIERTO, PCERRADO, CORABIERTO, CORCERRADO, LLABIERTO, LLCERRADO, COMILLA, CABIERTO, CCERRADO, COMENTARIO;
terminal Integer NUMERO, LETRAS, DECIMAL, CADENA;

// seccion de no termimales
non terminal    n;
non terminal    s3;
non terminal    s4;
non terminal    l;
non terminal    e;
non terminal    f;
non terminal    v;
non terminal    u;
non terminal    o;
non terminal    g;
non terminal    cp;
non terminal    m;
non terminal    bp;
/*
s   ::= ENTERO:entero1 MAS ENTERO:entero2                   {: increaseCount(); System.out.println(String.format("La suma es: %d", entero1 + entero2)); :}
    |   ENTERO:entero1 MAS ENTERO:entero2 COMA s            {: increaseCount(); System.out.println(String.format("La suma es: %d", entero1 + entero2)); :}
    |   error  s                            {: System.out.println("accion desde gramatica"); :}
    ;
*/
n   ::= DEF bp
    ;

bp  ::= BARRAS LLABIERTO s3 LLCERRADO
    |   PIE LLABIERTO s4 LLCERRADO
    ;

s3  ::= TITULO COMILLA l COMILLA PUNTOYCOMA s3 
    |   EJEX CORABIERTO e CORABIERTO PUNTOYCOMA s3
    |   EJEY CORABIERTO f CORABIERTO PUNTOYCOMA s3
    |   UNIR CORABIERTO g CORABIERTO PUNTOYCOMA s3 
    ;

s4  ::= TITULO COMILLA l COMILLA PUNTOYCOMA s4
    |   TITULO CABIERTO l CCERRADO PUNTOYCOMA s4
    |   TIPO cp PUNTOYCOMA s4 
    |   ETIQUETAS CORABIERTO e CORCERRADO PUNTOYCOMA s4
    |   VALORES CORABIERTO m CORCERRADO PUNTOYCOMA s4
    |   TOTAL NUMERO PUNTOYCOMA s4
    |   UNIR CORABIERTO g CORCERRADO PUNTOYCOMA s4 
    |   EXTRA COMILLA LETRAS COMILLA s4
    |   EXTRA CABIERTO LETRAS CCERRADO s4
    ;

l   ::= CADENA
    |   LETRAS
    ;

cp  ::= CANTIDAD
    |   PORCENTAJE
    ;

e   ::= COMILLA LETRAS COMILLA COMA e
    |   COMILLA LETRAS COMILLA
    |   CABIERTO LETRAS CCERRADO COMA e
    |   CABIERTO LETRAS CCERRADO
    ;

m   ::= NUMERO COMA m
    |   NUMERO
    ;

g   ::= LLABIERTO NUMERO COMA NUMERO LLCERRADO COMA g
    |   LLABIERTO NUMERO COMA NUMERO LLABIERTO
    ;

f   ::= v COMA f
    |   v
    ;

v   ::= NUMERO
    |   NUMERO u
    ;

u   ::= o NUMERO u
    |   o NUMERO
    |   o PABIERTO NUMERO u PCERRADO
    ;
	
o   ::= MAS
    |   MENOS
    |   POR
    |   DIVIDIDO
    ;
